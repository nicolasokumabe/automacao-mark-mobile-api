/**
 * @override
 * @privateRemarks Because the "mobile" commands (execute methods) in this
 * driver universally accept an options object, this method will _not_ call
 * into `BaseDriver.executeMethod`.
 * @this {AndroidUiautomator2Driver}
 * @param {string} script
 * @param {any[]} [args]
 * @returns {Promise<any>}
 */
export function execute(this: AndroidUiautomator2Driver, script: string, args?: any[] | undefined): Promise<any>;
/**
 * @override
 * @this {AndroidUiautomator2Driver}
 * @param {string} script Must be of the form `mobile: <something>`, which
 * differs from its parent class implementation.
 * @param {import('@appium/types').StringRecord} [opts={}]
 * @returns {Promise<any>}
 */
export function executeMobile(this: AndroidUiautomator2Driver, script: string, opts?: import("@appium/types").StringRecord<any> | undefined): Promise<any>;
export type UiAutomator2Server = import('../uiautomator2').UiAutomator2Server;
export type ADB = import('appium-adb').ADB;
export type StringRecord<T = any> = import('@appium/types').StringRecord<T>;
import { AndroidUiautomator2Driver } from '../driver';
//# sourceMappingURL=execute.d.ts.map