"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setAnimationState = void 0;
const constants_js_1 = require("../constants.js");
/**
 * Change the state of animation on the device under test.
 * Animation on the device is controlled by the following global properties:
 * [ANIMATOR_DURATION_SCALE]{@link https://developer.android.com/reference/android/provider/Settings.Global.html#ANIMATOR_DURATION_SCALE},
 * [TRANSITION_ANIMATION_SCALE]{@link https://developer.android.com/reference/android/provider/Settings.Global.html#TRANSITION_ANIMATION_SCALE},
 * [WINDOW_ANIMATION_SCALE]{@link https://developer.android.com/reference/android/provider/Settings.Global.html#WINDOW_ANIMATION_SCALE}.
 * This method sets all this properties to 0.0 to disable (1.0 to enable) animation.
 *
 * Turning off animation might be useful to improve stability
 * and reduce tests execution time.
 *
 * @this {import('../client').SettingsApp}
 * @param {boolean} on - True to enable and false to disable it.
 */
async function setAnimationState(on) {
    await this.adb.shell([
        'am', 'broadcast',
        '-a', constants_js_1.ANIMATION_SETTING_ACTION,
        '-n', constants_js_1.ANIMATION_SETTING_RECEIVER,
        '--es', 'setstatus', on ? 'enable' : 'disable'
    ]);
}
exports.setAnimationState = setAnimationState;
;
//# sourceMappingURL=animation.js.map